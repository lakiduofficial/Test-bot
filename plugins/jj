const { updateEnv, readEnv } = require('../lib/database');
const { cmd, commands } = require('../command');
const EnvVar = require('../lib/mongodbenv');

cmd({
    pattern: "settings",
    alias: ["setting","set"],
    desc: "Check bot online or not.",
    category: "main",
    react: "‚öôÔ∏è",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        if (!isOwner) return;

        const config = await readEnv();

        let work;
        switch (config.MODE) {
            case 'public':
                work = 'ùôøùöÑùô±ùôªùô∏ùô≤üåé';
                break;
            case 'private':
                work = 'ùôøùöÅùô∏ùöÖùô∞ùöÉùô¥üë§';
                break;
            case 'groups':
                work = 'ùô∂ùöÅùôæùöÑùôø ùôæùôΩùôªùöàüë•';
                break;
            case 'inbox':
                work = 'ùô∏ùôΩùô±ùôæùöá ùôæùôΩùôªùöàü´Ç';
                break;
            default:
                work = 'ùöÑùôΩùô∫ùôæùöÜùôΩüõë';
        }

        let autoStatus = config.AUTO_READ_STATUS === 'true' ? '‚úÖ ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autoVoice = config.AUTO_VOICE === 'true' ? '‚úÖ ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autoReadcmd = config.AUTO_READ_CMD === 'true' ? '‚úÖ ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autoTyping = config.AUTO_TYPING === 'true' ? '‚úÖ ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autoBio = config.AUTO_BIO === 'true' ? '‚úÖ ùôæùôΩ' : 'üö´ ùôæùôµùôµ';

        const vv = await conn.sendMessage(from, {
            image: { url: 'https://files.catbox.moe/7exz93.png' },
            caption: `‚ï≠‚îÅ‚îÄ‚â™ ‚ú† || ‚ú† ‚â´‚îÄ‚îÅ‚ïÆ
‚ñë‚ñí‚ñì‚ñà      üõ† *NADEEN-MD BOT SETTINGS* üõ†
‚ñë‚ñí‚ñì‚ñà‚ñÑÔ∏ª‚îª ------------| Ô∏ª‚î≥‚ïê‚îÄ-
‚ñë‚ñí‚ñì‚ñàüí• *Work Mode* || *${work}*
‚ñë‚ñí‚ñì‚ñàüí• *Auto Voice* || *${autoVoice}*
‚ñë‚ñí‚ñì‚ñàüí• *Auto Status* || *${autoStatus}*
‚ñë‚ñí‚ñì‚ñàüí• *Auto Bio* || *${autoBio}*
‚ñë‚ñí‚ñì‚ñàüí• *Auto Typing* || *${autoTyping}*
‚ñë‚ñí‚ñì‚ñàüí• *Auto Read Command* || *${autoReadcmd}*
‚ñë‚ñí‚ñì‚ñà‚ï≠‚îÅ‚îÄ‚â™ ‚ú† || ‚ú† ‚â´‚îÄ‚îÅ‚ïÆ
‚ñë‚ñí‚ñì      üîó  *CUSTOMIZE YOUR SETTINGS* üõ†
    ‚ï∞‚îÅ‚îÄ‚â™ ‚ú† || ‚ú† ‚â´‚îÄ‚îÅ‚ïØ
‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[1]WORK MODE ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì    1.1 || *Public Work*
‚ñë‚ñí‚ñì‚ñà   1.2 || *Private Work*
‚ñë‚ñí‚ñì‚ñà   1.3 || *Group Only*
‚ñë‚ñí‚ñì‚ñà   1.4 || *Inbox Only*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[2] AUTO VOICE ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  2.1 || *Auto Voice On*
‚ñë‚ñí‚ñì‚ñà  2.2 || *Auto Voice Off*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[3] AUTO STATUS SEEN ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  3.1 || *Auto Read Status On*
‚ñë‚ñí‚ñì‚ñà  3.2 || *Auto Read Status Off*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[4] AUTO BIO ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  4.1 || *Auto Bio On*
‚ñë‚ñí‚ñì‚ñà  4.2 ||*Auto Bio Off*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[5] AUTO NEWS SERVICE ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  5.1 || *Activate News Service*
‚ñë‚ñí‚ñì‚ñà  5.2 || *Deactivate News Service*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[6] AUTO TYPING ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  6.1 || *Activate Auto Typing*
‚ñë‚ñí‚ñì‚ñà  6.2 || *Deactivate Auto Typing*

‚ñë‚ñí‚ñì‚ñà *‚îà‚îÅ‚ïê‚òÜ[7] AUTO COMMAND READ ‚òÜ‚ïê‚îÅ‚îà* ‚öô
‚ñë‚ñí‚ñì‚ñà  7.1 || *Activate Auto Command Read*
‚ñë‚ñí‚ñì‚ñà  7.2 || *Deactivate Auto Command Read*
‚ï∞‚îÅ‚îÄ‚â™ ‚ú† || ‚ú† ‚â´‚îÄ‚îÅ‚ïØ

> *…¥·¥Ä·¥Ö·¥á·¥á…¥-·¥ç·¥Ö  ô è …¥·¥Ä·¥Ö·¥á·¥á…¥ ·¥ò·¥è·¥è Ä…¥·¥Ä*
`
        }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        reply(".restart");
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        reply(".restart");
                        break;
                    case '1.3':               
                          reply(".update MODE:groups");
                        reply(".restart");
                      break;
                    case '1.4':     
                        reply(".update MODE:inbox");
                        reply(".restart");
                      break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        reply(".restart");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                        reply(".restart");
                    break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                        reply(".restart");
                    break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                        reply(".restart");
                    break;
                    case '4.1': 
                    reply(".update AUTO_BIO:true");
                    reply(".restart");
                    break;
                    case '4.2': 
                    reply(".update AUTO_BIO:false");
                    reply(".restart");
                    break;
                    case '5.1': 
                    reply(".startnews");
                    break;
                    case '5.2': 
                    reply(".stopnews");
                    break;
                    case '6.1':      
                        reply(".update AUTO_TYPING:true");
                        reply(".restart");
                        break;
                    case '6.2':   
                        reply(".update AUTO_TYPING:false");
                        reply(".restart");
                    break;
                    case '7.1': 
                        reply(".update AUTO_READ_CMD:true");
                        reply(".restart");
                    break;
                    case '7.2':   
                        reply(".update AUTO_READ_CMD:false");
                        reply(".restart");
                    
                        break;
                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
